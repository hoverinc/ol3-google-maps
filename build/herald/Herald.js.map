{"version":3,"file":"Herald.js","sources":["../../src/olgm/herald/Herald.js"],"sourcesContent":["/**\n * @module olgm/herald/Herald\n */\nimport Abstract from '../Abstract.js';\n\n/**\n * @typedef {Object} WatchOptions\n * @property {boolean} [image=true] Whether to watch image layers or not\n * @property {boolean} [tile=true] Whether to watch tile layers or not\n * @property {boolean} [vector=true] Whether to watch vector layers or not\n */\n\nclass Herald extends Abstract {\n  /**\n   * Abstract class for all heralds. When activated, an herald synchronizes\n   * something from the OpenLayers map to the Google Maps one. When deactivated,\n   * it stops doing so.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * @type {module:olgm/AbstractListener~AbstractListener|null}\n     * @protected\n     */\n    this.listener = null;\n  }\n\n\n  /**\n   * Register all event listeners.\n   */\n  activate() {}\n\n\n  /**\n   * Unregister all event listeners.\n   */\n  deactivate() {\n    if (this.listener) {\n      this.listener.unlisten();\n    }\n  }\n}\nexport default Herald;\n"],"names":["super"],"mappings":"AAAA;;;AAGA,OAAO,QAAQ,MAAM,gBAAgB,CAAC;;;;;;;;;AAStC,IAAM,MAAM,GAAiB;EAS3B,eAAW,CAAC,MAAM,EAAE,IAAI,EAAE;IACxBA,aAAK,OAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;;;;;IAMpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;;;;wCACtB;;;;;;mBAMD,6BAAQ,GAAG,GAAE;;;;;;mBAMb,iCAAU,GAAG;IACX,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;GACF;;;EAjCkB,WAkCpB;AACD,eAAe,MAAM,CAAC;"}